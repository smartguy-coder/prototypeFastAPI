const socket = io("ws://127.0.0.1", {
  path: "/api/socket.io",
});

socket.on("connect", () => {
  console.log("‚úÖ Connected:", socket.id);
  document.getElementById("status").textContent = "Connected";

  if (user) {
    socket.emit("set_user", { user: user });
  }

});

socket.on("disconnect", () => {
  console.log("‚ùå Disconnected");
  document.getElementById("status").textContent = "Disconnected";
});

socket.on("my_messages", (data) => {
  const container = document.getElementById("my_messages");
  const { title, time, message } = data;

  if (!title) return;

  // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±–≥–æ—Ä—Ç–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  const msgDiv = document.createElement("div");
  msgDiv.classList.add("mb-2");

  msgDiv.innerHTML = `
    <div class="success success-info shadow-sm">
      <strong >üîî ${title}</strong><br>
      <small class="text-muted">${time}</small><br>
      <span>${message}</span>
    </div>
  `;

  container.appendChild(msgDiv);

  // –í–∏–¥–∞–ª—è—î–º–æ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
setTimeout(() => {
  msgDiv.classList.add("fade-out");
  setTimeout(() => msgDiv.remove(), 500); // –ø—ñ—Å–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
}, 5000);
});



document.getElementById("test_messages").onclick = () => {
  socket.emit("my_messages", {}, (response) => {
    console.log("my_messages:", response);
  });
};

socket.on("users_list", (data) => {
  const rawUsers = data["users_list"]; // –∞–±–æ ["–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"]

  const users = Object.entries(rawUsers).map(([sid, userStr]) => ({
    sid,
    ...JSON.parse(userStr)
  }));

  console.log("–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:");
  users.forEach(user => {
    console.log(`SID: ${user.sid}, Name: ${user.name}, Email: ${user.email}`);
  });
});



